[gd_scene load_steps=22 format=3 uid="uid://b5753y5ebhp83"]

[ext_resource type="Texture2D" uid="uid://cjh4yvia5wlnj" path="res://assets/textures/health_bar/3.png" id="1_an3d7"]
[ext_resource type="Texture2D" uid="uid://bsd8adotwye0s" path="res://assets/textures/health_bar/shield.png" id="3_ah5ja"]
[ext_resource type="Texture2D" uid="uid://bj02tpdxlux1j" path="res://assets/textures/coin_gui.png" id="3_dlgct"]
[ext_resource type="Texture2D" uid="uid://d0h3072bmudfq" path="res://assets/textures/punching animation.png" id="4_m6j31"]
[ext_resource type="Texture2D" uid="uid://lra75ohs0257" path="res://assets/textures/vikingidle.png" id="5_aybjd"]
[ext_resource type="Texture2D" uid="uid://bmwrdgtqbjjad" path="res://assets/textures/viking landing.png" id="5_olk25"]
[ext_resource type="Texture2D" uid="uid://b12v5sya4b6" path="res://assets/textures/vikingjump.png" id="5_rh3hg"]
[ext_resource type="Texture2D" uid="uid://deq0oegjo3men" path="res://assets/textures/run.png" id="6_bxhy3"]
[ext_resource type="Texture2D" uid="uid://th0x8v04e5m4" path="res://assets/textures/viking hitanimation.png" id="9_pbhep"]

[sub_resource type="GDScript" id="GDScript_vvvvd"]
script/source = "extends CharacterBody2D

@export var speed = 350
@export var gravity = 35
var jump_force = 1350
@onready var ap = $AnimationPlayer
@onready var sprite = $Sprite2D
@onready var attack_area = $AttackArea
@onready var damage_area = $DamageArea
@onready var health_bar = $Camera2D/HealthBar
@onready var shield_bar = $Camera2D/Shield
@onready var score_counter = $Camera2D/Score

@export var health: int = 3
@export var shield: int = 1
@export var coin: int = 0

# Load textures for health and shield
var health_textures = [
	preload(\"res://assets/textures/health_bar/3.png\"),
	preload(\"res://assets/textures/health_bar/2.png\"),
	preload(\"res://assets/textures/health_bar/1.png\")
]

var shield_textures = [
	preload(\"res://assets/textures/health_bar/shield_empty.png\"),
	preload(\"res://assets/textures/health_bar/shield.png\")
]

func _ready() -> void:
	$AnimationPlayer.animation_finished.connect(_on_animation_finished)
	update_health_bar()  # Initialize health bar texture
	update_shield_bar()  # Initialize shield bar texture

func _physics_process(delta: float) -> void:
	if !is_on_floor():
		velocity.y += gravity
		
	if Input.is_action_just_pressed(\"jump\") && is_on_floor():
		velocity.y = -jump_force
	
	var horizontal_direction = Input.get_axis(\"move_left\", \"move_right\")
	
	velocity.x = speed * horizontal_direction

	if velocity.x != 0:
		sprite.flip_h = velocity.x < 0
		
	score_counter.text = str(coin)
	
	move_and_slide()
	
	update_animations(horizontal_direction)
	update_attack_area(horizontal_direction)

func update_animations(horizontal_direction):
	if ap.is_playing() and (ap.current_animation == \"attack\" or ap.current_animation == \"hit\"):
		return
	if Input.is_action_just_pressed(\"attack\"):
		attack_area.monitoring = true 
		ap.play(\"attack\")
	elif is_on_floor():
		if horizontal_direction == 0:
			ap.play(\"idle\")
		else:
			ap.play(\"run\")
	else:
		if velocity.y < 0:
			ap.play(\"jump\")
		elif velocity.y > 0:
			ap.play(\"fall\")

func update_attack_area(horizontal_direction):
	if horizontal_direction != 0:
		var offset = horizontal_direction * 170
		attack_area.position.x = offset

# Signal handler for when an enemy enters the damage area
func _on_damage_area_body_entered(body: Node2D) -> void:
	if body.is_in_group(\"enemies\"): 
		if body.has_node(\"AnimationPlayer\"):
			var ap2 = body.get_node(\"AnimationPlayer\")
			ap2.play(\"attack\")
			take_damage(1)
			await ap2.animation_finished
			ap2.play(\"constant\")
		

# Update health bar texture based on current health
func update_health_bar():
	health_bar.texture = health_textures[3 - health] if health > 0 else health_textures[2]

# Update shield bar texture based on current shield value
func update_shield_bar():
	shield_bar.texture = shield_textures[shield]

# Call these functions whenever health or shield changes
func take_damage(amount: int):
	ap.play('hit')
	if shield > 0:
		shield -= amount
		if shield < 0:
			amount = -shield  # Calculate remaining damage after shield is depleted
			shield = 0
			update_shield_bar()
		else:
			update_shield_bar()
			return
	
	health -= amount
	if health < 0:
		health = 0
	
	update_health_bar()

	if health == 0:
		get_tree().quit()

func _on_attack_area_body_entered(body: Node2D) -> void:
	if body.is_in_group(\"enemies\"):

		body.set_physics_process(false)
		if body.has_node(\"AnimationPlayer\"):
			var ap2 = body.get_node(\"AnimationPlayer\")
			ap2.play(\"die\")
			await ap2.animation_finished
		coin += 1
		body.queue_free()

func _on_animation_finished(anim_name: String):
	if anim_name == \"attack\":
		attack_area.monitoring = false
		
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_videw"]
size = Vector2(238.462, 380.659)

[sub_resource type="Animation" id="Animation_bvw0q"]
length = 0.5
loop_mode = 1
step = 0.125
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("5_aybjd")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.125, 0.25, 0.375),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="Animation" id="Animation_ugu3n"]
resource_name = "attack"
length = 0.4
step = 0.04
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("4_m6j31")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [10]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.04, 0.08, 0.12, 0.16, 0.2, 0.24, 0.28, 0.32, 0.36),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
}

[sub_resource type="Animation" id="Animation_30pru"]
resource_name = "fall"
length = 0.2
loop_mode = 1
step = 0.0667
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("5_olk25")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_qfuxu"]
resource_name = "hit"
length = 0.5
step = 0.125
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("9_pbhep")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [5]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "bezier"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"handle_modes": PackedInt32Array(0, 0, 0, 0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0, 2, -0.25, 0, 0.25, 0, 3, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 0.125, 0.25, 0.375)
}

[sub_resource type="Animation" id="Animation_ghb85"]
resource_name = "idle"
length = 0.5
loop_mode = 1
step = 0.125
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("5_aybjd")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.125, 0.25, 0.375),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="Animation" id="Animation_oj2xk"]
resource_name = "jump"
length = 0.1
loop_mode = 1
step = 0.0667
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("5_rh3hg")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_j3xqm"]
resource_name = "run"
length = 0.6
loop_mode = 1
step = 0.15
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("6_bxhy3")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.15, 0.3, 0.45),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_yx0l3"]
_data = {
"RESET": SubResource("Animation_bvw0q"),
"attack": SubResource("Animation_ugu3n"),
"fall": SubResource("Animation_30pru"),
"hit": SubResource("Animation_qfuxu"),
"idle": SubResource("Animation_ghb85"),
"jump": SubResource("Animation_oj2xk"),
"run": SubResource("Animation_j3xqm")
}

[sub_resource type="RectangleShape2D" id="RectangleShape2D_m1dd6"]
size = Vector2(142.692, 287.308)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_lfdh8"]
size = Vector2(236.538, 370)

[node name="Player" type="CharacterBody2D"]
position = Vector2(20, -19)
scale = Vector2(1.3, 1.3)
collision_mask = 4
script = SubResource("GDScript_vvvvd")
speed = 2000

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(-14.4, -510.4)
scale = Vector2(1, 1.00542)
position_smoothing_speed = 25.0

[node name="HealthBar" type="TextureRect" parent="Camera2D"]
z_index = 2
offset_left = -2118.68
offset_top = -1119.69
offset_right = -2054.68
offset_bottom = -1087.69
scale = Vector2(12.7505, 12.7505)
texture = ExtResource("1_an3d7")

[node name="Coin" type="TextureRect" parent="Camera2D"]
z_index = 2
offset_left = -1954.06
offset_top = -721.841
offset_right = -1914.06
offset_bottom = -681.841
scale = Vector2(3.72819, 3.72819)
texture = ExtResource("3_dlgct")

[node name="Shield" type="TextureRect" parent="Camera2D"]
z_index = 1
offset_left = -1533.29
offset_top = -1004.92
offset_right = -1493.29
offset_bottom = -964.923
scale = Vector2(4.16059, 4.16059)
texture = ExtResource("3_ah5ja")

[node name="Score" type="Label" parent="Camera2D"]
modulate = Color(0.32, 0.32, 0.32, 1)
offset_left = -1779.45
offset_top = -720.311
offset_right = -1739.45
offset_bottom = -697.311
scale = Vector2(5.86619, 6.95306)
text = "0"

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(-17, -178)
scale = Vector2(11.54, 11.54)
texture = ExtResource("5_aybjd")
hframes = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(-16.9231, -186.154)
shape = SubResource("RectangleShape2D_videw")
one_way_collision_margin = 1.4

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_yx0l3")
}
autoplay = "hit"
speed_scale = 1.5

[node name="AttackArea" type="Area2D" parent="."]
position = Vector2(203.846, -36.9231)
collision_layer = 8
collision_mask = 2
monitoring = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="AttackArea"]
position = Vector2(-26.1539, -128.462)
shape = SubResource("RectangleShape2D_m1dd6")

[node name="DamageArea" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="DamageArea"]
position = Vector2(-16.7308, -186.538)
shape = SubResource("RectangleShape2D_lfdh8")

[connection signal="body_entered" from="AttackArea" to="." method="_on_attack_area_body_entered"]
[connection signal="body_entered" from="DamageArea" to="." method="_on_damage_area_body_entered"]
